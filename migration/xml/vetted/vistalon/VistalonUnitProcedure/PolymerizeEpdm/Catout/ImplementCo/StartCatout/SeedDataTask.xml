<?xml version="1.0" ?>
<sfc zoom="1.3499997" canvas="7 9" execution-mode="Callable" version="7.9.0 (b2016101208)" timestamp="Mon Feb 27 13:37:39 CST 2017" hot-editable="false" persist-state="false">
	<step id="39288788-8071-11d9-a871-006008c66680" location="1 0" name="S88Begin_13833" factory-id="begin-step">
<parameters>
	<parameter><name>returnStatus</name><expression>"NULL"</expression></parameter>
</parameters>
		<associated-data>{}</associated-data>
	</step>
	<step id="c375b030-8071-11d9-a871-006008c66680" location="1 1" name="ValidateData" factory-id="action-step" breakpoint="true">
		<start-script># Copyright 2016 ExxonMobil Corporation. All rights reserved.

'''
     Check is the polyrate is varying too much to allow for collection of current 
     plant conditions. 
'''
import system
from ils.sfc.common.constants import GLOBAL_SCOPE,LOCAL_SCOPE
from ils.sfc.common.constants import MSG_STATUS_INFO, MSG_STATUS_WARNING, MSG_STATUS_ERROR
from ils.sfc.gateway.api import getChartLogger, s88Get, s88Set, getProviderName,getDatabaseName, postToQueue

def onStart(chart,block):
	provider = getProviderName(chart)
	database = getDatabaseName(chart)
	log = getChartLogger(chart)
	log.tracef("Entering %s - %s",chart.get("name",""),block.get("name",""))

	polyRateDataCollectPct = s88Get(chart,block,"poly-rate-data-collect-pct.value",GLOBAL_SCOPE)
	polyRateDataCollectInterval = s88Get(chart,block,"poly-rate-data-collect-interval.value",GLOBAL_SCOPE)

	tagPath = "[%s]SFC IO/Rate Change/VRF9101Z/value" % (provider)
	calculations = ["SimpleAverage","Minimum","Maximum"]
	now = system.date.now()
	rangeMinutes = -1 * polyRateDataCollectInterval
	
	ds = system.tag.queryTagCalculations(paths=[tagPath], calculations=calculations, endDate=now, rangeMinutes=rangeMinutes)
	
	if ds.rowCount == 1:
		avgPolyRate = ds.getValueAt(0, 1)
		minPolyRate = ds.getValueAt(0, 2)
		maxPolyRate = ds.getValueAt(0, 3)

		if avgPolyRate == 0.0:
			postToQueue(chart,MSG_STATUS_WARNING,"Rate change data was not available.")
			chart.returnStatus = "timeout"
		else:
			actualPolyRatePct = (maxPolyRate - minPolyRate) / avgPolyRate * 100.0
			log.tracef(" MaxPolyRate = %f", maxPolyRate)
			log.tracef(" MinPolyRate = %f", minPolyRate)
			log.tracef(" AvgPolyRate = %f", avgPolyRate)
			log.tracef(" Poly rate pct limit = %f", polyRateDataCollectPct)
			log.tracef(" Actual poly Rate pct = %f", actualPolyRatePct)
			if actualPolyRatePct &gt; polyRateDataCollectPct:
				log.tracef("The poly rate varied too much")
				postToQueue(chart,MSG_STATUS_WARNING,"Rate change data varied too much to seed data.")
				chart.returnStatus = "data varied too much"
			else:
				log.tracef("The poly rate data was ok")
				chart.returnStatus = "data ok"

	else:
		postToQueue(chart,MSG_STATUS_WARNING,"Rate change data was not available to seed data.")
		chart.returnStatus = "timeout"

	log.tracef("Leaving %s",block.get("name",""))</start-script>
		<associated-data>{}</associated-data>
	</step>
	<step id="b6a12a44-f9ef-11d9-a219-00b0d0d0fabc" location="0 4" name="TooMuchVariation" factory-id="com.ils.controlPanelMessageStep"><description></description><timeoutUnit>SEC</timeoutUnit><message>Rx data varied too much and has NOT been saved for a restick of the reactor.</message><priority>Info</priority><postToQueue>false</postToQueue><timeout>1.0</timeout><ackRequired>false</ackRequired><name>TooMuchVariation</name><id>b6a12a44-f9ef-11d9-a219-00b0d0d0fabc</id>		<associated-data>{}</associated-data>
	</step>
	<step id="de52e3de-f9ef-11d9-a219-00b0d0d0fabc" location="1 4" name="Timeout" factory-id="com.ils.controlPanelMessageStep"><description></description><timeoutUnit>SEC</timeoutUnit><message>Rx data has NOT been saved for the restick of reactor due to timeout.</message><priority>Info</priority><postToQueue>false</postToQueue><timeout>1.0</timeout><ackRequired>false</ackRequired><name>Timeout</name><id>de52e3de-f9ef-11d9-a219-00b0d0d0fabc</id>		<associated-data>{}</associated-data>
	</step>
	<step id="e16b42f0-6b63-11d9-a9ad-00022dc3c8fd" location="2 4" name="SeedRateData" factory-id="action-step">
		<start-script># Copyright 2016 ExxonMobil Corporation. All rights reserved.

'''
    Since the unit rate data is stable, collect the data that allows for restick of 
    reactor at last good rates. 
'''
import system
from ils.sfc.common.constants import LOCAL_SCOPE
from ils.sfc.gateway.api import getChartLogger, getProviderName, getDatabaseName, s88Set, s88Get

def onStart(chart,block):
	provider = getProviderName(chart)
	database = getDatabaseName(chart)
	log = getChartLogger(chart)
	log.tracef("Entering %s - %s",chart.get("name",""),block.get("name",""))
	
	currentConfig = system.tag.read("[]DiagnosticToolkit/CSTR/RX-CONFIGURATION/value").getValue()

#	configuration = rx.getType(currentConfig)
#	currentDataBlock = api.s88GetRateChangeBlock(configuration,"current")
#	newDataBlock = api.s88GetRateChangeBlock(configuration,"new")
#	copyProcName = "_em-s88-copy-[CONFIGURATION]-data"
#	eval(import COPY-PROC-NAME
#COPY-PROC-NAME(block,currentDataBlock,newDataBlock))
	#     Set the new rate to the current rate (the new data will be the same as the current data. 
	polyRate = s88Get(chart,currentDataBlock,"poly-rate.value",LOCAL_SCOPE)
	log.tracef("Status: %s, Rate: %s",str(status),str(polyRate))
	s88Set(chart,newDataBlock,"poly-rate.value",polyRate,LOCAL_SCOPE)
#	calculateProcName = "_em-s88-new-[CONFIGURATION]-production"
#	eval(import CALCULATE-PROC-NAME
#CALCULATE-PROC-NAME(block,currentDataBlock,newDataBlock))

	log.tracef("Leaving %s as complete.",block.get("name",""))
</start-script>
		<associated-data>{}</associated-data>
	</step>
	<step id="6a3ca52b-8a9c-11d9-b116-00065b88c6c2" location="2 5" name="DataSaved" factory-id="com.ils.queueMessageStep"><name>DataSaved</name><description></description><id>6a3ca52b-8a9c-11d9-b116-00065b88c6c2</id><message>Reactor data has been saved for the restick of reactor.</message><priority>Info</priority>		<associated-data>{}</associated-data>
	</step>
	<step id="39288783-8071-11d9-a871-006008c66680" location="0 7" name="S88End_13832" factory-id="end-step">		<associated-data>{}</associated-data>
	</step>
	<transition id="f2a196da-8071-11d9-a871-006008c66680" location="0 3" timeout-enabled="true" timeout-delay="30000" timeout-flag="S88-CONDITIONAL-TRANSITION-XXX-13829">{chart.returnStatus} = "data varied too much"</transition>
	<transition id="0c737ed8-80b2-11d9-a871-006008c66680" location="1 3" timeout-enabled="true" timeout-delay="30000" timeout-flag="S88-CONDITIONAL-TRANSITION-XXX-13827">{chart.returnStatus} = "timeout"</transition>
	<transition id="6176bb3a-80ae-11d9-a871-006008c66680" location="2 3" timeout-enabled="true" timeout-delay="30000" timeout-flag="S88-CONDITIONAL-TRANSITION-XXX-13828">{chart.returnStatus} = "data ok"</transition>
	<note id="e78fc183-7658-4336-885a-5166ff2a290b" location="2 1" size="2 1">This action step communicates it's 
conclusion to the following transitions
using a chart scope variable (defined
in the Begin step).</note>
	<note id="af2503a8-f7b4-4241-8e68-afd241a5e691" location="3 4" note-background="color(255,0,0,255)">Needs work...</note>
	<link id="06de345a-c66c-41ba-b5a4-61d078a52233" location="0 2"><down/><right/></link>
	<link id="ef72c927-6ff2-4dad-b82e-ddfc2b76f377" location="1 2"><up/><left/><down/><right/></link>
	<link id="cbff0d19-5871-42ba-954f-f69738801e51" location="2 2"><left/><down/></link>
	<link id="61e10c77-c76e-4463-a737-8fe267ef4915" location="0 5"><up/><down/><right/></link>
	<link id="3031e317-5c05-4dd7-8a98-e426dd45378c" location="1 5"><up/><down/></link>
	<link id="7ac821a1-cd84-4777-a77f-1d2c637cc679" location="0 6"><up/><down/><right/></link>
	<link id="e2d604de-16da-43a7-9812-3197dc817c3c" location="1 6"><up/><left/><right/></link>
	<link id="8b668169-50ce-4109-b60a-ef9dc686cece" location="2 6"><up/><left/><down/></link>

</sfc>
