fs-r2-ps-vs-pr (BLOCK: class s88-recipe-entity)

slope: float;
old-polyrate, new-polyrate, delta-polyrate : float; 

old-ps, new-ps: float;
 
ERROR: class s88-error;
ERROR-TXT: text;
P: class ph-procedure-or-method = this procedure;
DEBUG-MODE: truth-value = false; 
 
begin
	if the debug-mode of P or the debug-mode of BLOCK then DEBUG-MODE = true;

	if DEBUG-MODE then post "In [the name of P]. . ."; 

	begin
		new-polyrate = call s88-get (BLOCK, "new.poly-rate-from-user.val", s88-superior-operation);
		old-polyrate = call s88-get (BLOCK, "cur.poly-rate-from-user.val", s88-superior-operation); 

		old-ps = call s88-get(BLOCK, "cur.poly-split.val", s88-superior-operation); 

		slope = call s88-get (BLOCK, "r2-poly-split-slope.val", s88-superior-operation);  
	end
	on error (ERROR)
		delete ERROR;
		ERROR-TXT = "In [the name of P] - failed to collect base case RECIPE data for Poly Split change.";
		call s88-post-message-to-queue(BLOCK, ERROR-TXT, em-critical, BLOCK); 
		return; 
	end;

{ Calculate the change in polymer rate desired [klb/day] }
	delta-polyrate = new-polyrate - old-polyrate; 
  
{ Calculate the new polymer split target.  The polymer split [wt%] is a linear function of the polymer rate [klb/D].}
	new-ps = old-ps + slope * delta-polyrate;
	if DEBUG-MODE then post "In [the name of P] with new-ps=[new-ps]."; 

	call s88-set-data (BLOCK, "new.poly-split.val", new-ps, s88-superior-operation);  
   

end