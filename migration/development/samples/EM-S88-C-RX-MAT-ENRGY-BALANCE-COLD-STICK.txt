em-s88-c-rx-mat-enrgy-balance-cold-stick(BLOCK: class s88-recipe-entity) = (symbol {complete, stopped, or error} )

{ Material and Energy Balance for C-Rx }

{Common Input Data}
RX-TEMP, R1-FEED-TEMP, TOTAL-C2-TARGET, TOTAL-C9-TARGET, POLY-RATE: float;
SWEEP-C6: float;
GRADE: quantity; 

{C-Rx Input Data}
FD-FLOW, SS-FLOW: class quantity-array; 
CRX-SS-FRCT: class quantity-array; 
PCT-SDSTRM-C2-OF-TOTAL-C2, SS-C3-TO-C2, SS-C9-TO-C2, SS-C6-TO-C2: float;
C3-WTFRACT, C2O-WTFRACT, C3O-WTFRACT: float; 
SDSTRM-FEED-TEMP, DIL-C6-TEMP, CAT-MIX-TEE-TEMP: float;
MIX-TEE-FLOW: float;
DIL-C6-FLOW: float = 0.0;

{Model Calculated Data}
FRNT-H , HT-OF-RX, TOT-FD-FLOW, CEMENT-CONC, CALC-HT-RX-R1: float;
HEAT-C6-TEMP-RX-TEMP, HEAT-C6-TEMP-FD-TEMP, SDSTRM-H : float;
HEAT-C6-TEMP-MIX-TEE-TEMP: float;
HEAT-C6-TEMP-DIL-C6-TEMP: float;
HEAT-C6-TEMP-SS-TEMP: float; 
NEW-DIL-C6-FLOW: float;
SDSTRM-COMP-FLOWS: class quantity-array; 
SS-FLOW-ARRAY: class quantity-array;
FRNT-COMP-FLOWS: class quantity-array;
TOTAL-FD-FLOW, TOTAL-SS-COMP-FLOW: float;
TOTAL-FRNT-FLOW, TOTAL-SS-FLOW, ALT-C6-FLOW, ALT-CEMENT-CONC : float;


{Misc}
SEQ: sequence;
STRUC: structure;
I, iteration-count: integer;
iteration-count-max: integer = 751;
DIL-C6-FLOW-CHANGE: float = 10.0;
DIL-C6-MAX-ERROR: float = 0.25; 

UNIT-PROCEDURE: class s88-unit-procedure; 
STATUS: symbol; 

START-TIME, DELAY: quantity;
P: class ph-procedure-or-method = this procedure;
DEBUG-MODE: truth-value = false; 

begin
    if the debug-mode of P or the debug-mode of BLOCK then DEBUG-MODE = true;

    if DEBUG-MODE then post "In [the name of P] with [the label of BLOCK], a [the class of BLOCK]. . .";

    conclude that the state of BLOCK = s88-running-state;

    {Find the Unit Procedure for this Block}
    UNIT-PROCEDURE = call s88-get-unit-procedure (BLOCK); 

    {Get Recipe Input Data} 
    STATUS, RX-TEMP = call s88-get-data(BLOCK, "rx-temp.val", the symbol global);
    STATUS, R1-FEED-TEMP = call s88-get-data(BLOCK, "r1-feed-temp.val", the symbol global);
    STATUS, TOTAL-C2-TARGET = call s88-get-data(BLOCK, "total-c2-target.val", the symbol global);
    STATUS, TOTAL-C9-TARGET = call s88-get-data(BLOCK, "total-c9-target.val", the symbol global);
    STATUS, POLY-RATE = call s88-get-data(BLOCK, "poly-rate.val", the symbol global); 
    STATUS, SWEEP-C6 = call s88-get-data(BLOCK, "sweep-c6.val", the symbol global); 
 
    {Get C-Rx Specific Data}
    STATUS, FD-FLOW = call s88-get-data(BLOCK, "fd-flow.val", the symbol global);
    STATUS, SS-FLOW = call s88-get-data(BLOCK, "ss-flow.val", the symbol global); 
    STATUS, SDSTRM-COMP-FLOWS = call s88-get-data(BLOCK, "sdstrm-comp-flows.val", the symbol global); 
    STATUS, SDSTRM-FEED-TEMP = call s88-get-data(BLOCK, "sdstrm-feed-temp.val", the symbol global);
    STATUS, DIL-C6-TEMP = call s88-get-data(BLOCK, "dil-c6-temp.val", the symbol global); 
    STATUS, CAT-MIX-TEE-TEMP = call s88-get-data(BLOCK, "cat-mix-tee-temp.val", the symbol global);
    STATUS, MIX-TEE-FLOW = call s88-get-data(BLOCK, "mix-tee-flow.val", the symbol global); 
    STATUS, PCT-SDSTRM-C2-OF-TOTAL-C2 = call s88-get-data(BLOCK, "pct-sdstrm-c2-of-total-c2.val", the symbol global);
    STATUS, SS-C3-TO-C2 = call s88-get-data(BLOCK, "ratio-c3-to-c2-sdstrm.val", the symbol global); 
    STATUS, SS-C9-TO-C2 = call s88-get-data(BLOCK, "ratio-c9-to-c2-sdstrm.val", the symbol global); 
    STATUS, SS-C6-TO-C2 = call s88-get-data(BLOCK, "ratio-c6-to-c2-sdstrm.val", the symbol global); 
    STATUS, C3-WTFRACT = call s88-get-data(BLOCK, "c3-wtfract.val", the symbol global); 
    STATUS, C3O-WTFRACT = call s88-get-data(BLOCK, "c3o-wtfract.val", the symbol global);
    STATUS, C2O-WTFRACT = call s88-get-data(BLOCK, "c2o-wtfract.val", the symbol global);
    STATUS, GRADE = call s88-get-data(BLOCK, "grade.val", the symbol global); 
 
    {CALCULATE SDSTRM-COMP-FLOWS, TOTAL-SS-COMP-FLOW & TOT-FD-FLOW}
    {C2}
    conclude that SDSTRM-COMP-FLOWS[0] = FD-FLOW [0] * PCT-SDSTRM-C2-OF-TOTAL-C2;
    {C3}
    conclude that SDSTRM-COMP-FLOWS[1] = SDSTRM-COMP-FLOWS[0] * SS-C3-TO-C2;
    {C9}
    conclude that SDSTRM-COMP-FLOWS[2] = SDSTRM-COMP-FLOWS[0] * SS-C9-TO-C2;
    {C6}
    conclude that SDSTRM-COMP-FLOWS [5] = SDSTRM-COMP-FLOWS [0] * SS-C6-TO-C2;
    {C2O}
    conclude that SDSTRM-COMP-FLOWS [3] = SDSTRM-COMP-FLOWS [1] * (C2O-WTFRACT / C3-WTFRACT);
    {C3O}
    conclude that SDSTRM-COMP-FLOWS [4] = SDSTRM-COMP-FLOWS [1] * (C3O-WTFRACT / C3-WTFRACT);

    {TOTALIZE FLOWS}
    TOTAL-SS-COMP-FLOW = call s88-sum-array (BLOCK, SDSTRM-COMP-FLOWS , 6);
    TOTAL-FD-FLOW = call s88-sum-array (BLOCK, FD-FLOW, 6);

    {GET CRX-SS-FRCT DATA BASED UPON GRADE}
    if GRADE = 878 then begin
        STATUS, CRX-SS-FRCT = call s88-get-data(BLOCK, "V-878-actual.val", the symbol global);
    end
    else if GRADE = 919 then begin
        STATUS, CRX-SS-FRCT = call s88-get-data(BLOCK, "V-919-actual.val", the symbol global); 
    end
    else if GRADE = 959 then begin
        STATUS, CRX-SS-FRCT = call s88-get-data(BLOCK, "V-959-actual.val", the symbol global);
    end
    else begin 
        call s88-post-error(BLOCK, "Unknown recipe grade for C Reactor: [GRADE].  Aborting Cold Stick."); 
        start _s88-abort(UNIT-PROCEDURE); 
        return s88-complete-state; 
    end; 

    {CALCULATE SIDESTREAM AND FRONT COMP FLOWS}
    create a quantity-array SS-FLOW-ARRAY;
    change the array-length of SS-FLOW-ARRAY to the array-length of CRX-SS-FRCT;
    call g2-scalar-multiply (CRX-SS-FRCT, TOTAL-SS-COMP-FLOW, SS-FLOW-ARRAY);
   
    create a quantity-array FRNT-COMP-FLOWS;
    change the array-length of FRNT-COMP-FLOWS to the array-length of FD-FLOW;
    call g2-array-subtract (FD-FLOW, SDSTRM-COMP-FLOWS, FRNT-COMP-FLOWS);

    {ASSIGN SS-FLOW-SEQ TO SS-FLOW RECIPE STRUCTURE}

    { There is a strange mismatch of sequence length here - SS-FLOW-SEQ has 7 elements and SS-FLOW has 6.  I think the problem is that the 0th element in the former is not used! }

    SEQ = sequence();
    for i = 0 to (the array-length of SS-FLOW-ARRAY - 2) do
	conclude that SS-FLOW[I] = SS-FLOW-ARRAY[I + 1];
{
        STRUC = SS-FLOW[i - 1];
        STRUC = change-attribute(STRUC, val, the val of SS-FLOW-SEQ[i]);
        SEQ = insert-at-end(SEQ, STRUC);    
}    
    end;
{
    SS-FLOW = SEQ;
}

    if DEBUG-MODE then post "SS-FLOW-ARRAY: [SS-FLOW-ARRAY]"; 
    if DEBUG-MODE then post "SS-FLOW: [SS-FLOW]";

    iteration-count = 0;
    
    {ITERATIVE CACULATIONS}  
    repeat 
      iteration-count = iteration-count + 1;
     {CALCULATE FD-H, HT-OF-RX, FD-FLOW FOR C6}
     FRNT-H = call s88-feed-enthalpy-ex-c6 (BLOCK, FRNT-COMP-FLOWS, RX-TEMP, R1-FEED-TEMP);
     SDSTRM-H = call s88-feed-enthalpy-ex-c6 (BLOCK, SDSTRM-COMP-FLOWS, RX-TEMP, SDSTRM-FEED-TEMP); 
     STATUS, HT-OF-RX = call s88-ht-of-rx-t(BLOCK, RX-TEMP, TOTAL-C2-TARGET, TOTAL-C9-TARGET);

     {CALCULATE HEAT OF REACTION TEMPERATURE FOR C6}
     STATUS, HEAT-C6-TEMP-RX-TEMP = call s88-heat(BLOCK, 5, RX-TEMP);
     STATUS, HEAT-C6-TEMP-FD-TEMP = call s88-heat(BLOCK, 5, R1-FEED-TEMP);
     STATUS, HEAT-C6-TEMP-SS-TEMP = call s88-heat(BLOCK, 5, SDSTRM-FEED-TEMP); 
     STATUS, HEAT-C6-TEMP-DIL-C6-TEMP = call s88-heat(BLOCK, 5, DIL-C6-TEMP);
     STATUS, HEAT-C6-TEMP-MIX-TEE-TEMP = call s88-heat(BLOCK, 5, CAT-MIX-TEE-TEMP ); 

     {CALCULATE FRNT-COMP-FLOWS FOR C6}
     conclude that FRNT-COMP-FLOWS [5] = (POLY-RATE * HT-OF-RX - FRNT-H - SDSTRM-H - SDSTRM-COMP-FLOWS [5] * (HEAT-C6-TEMP-RX-TEMP - HEAT-C6-TEMP-SS-TEMP) - DIL-C6-FLOW * (HEAT-C6-TEMP-RX-TEMP - HEAT-C6-TEMP-DIL-C6-TEMP) - MIX-TEE-FLOW * (HEAT-C6-TEMP-RX-TEMP - HEAT-C6-TEMP-MIX-TEE-TEMP) )  / (HEAT-C6-TEMP-RX-TEMP - HEAT-C6-TEMP-FD-TEMP);

     NEW-DIL-C6-FLOW = call em-s88-c-rx-calc-dil-flows(BLOCK,FRNT-COMP-FLOWS, SS-FLOW-ARRAY);
 
    if iteration-count <= iteration-count-max then begin
       call s88-post-message-to-queue (BLOCK, "Total Dil C6 Flow is [NEW-DIL-C6-FLOW] old was [DIL-C6-FLOW].", em-information, BLOCK);  
    end
    else begin
       call s88-post-message-to-queue (BLOCK, "C-Rx Energy Balance NOT Converging: Total Dil C6 Flow is [NEW-DIL-C6-FLOW] old was [DIL-C6-FLOW].", em-critical, BLOCK);
       conclude that the command of BLOCK = s88-abort-command;
       wait for g2-latency-time;
    end;

     exit if abs(NEW-DIL-C6-FLOW - DIL-C6-FLOW) <= DIL-C6-MAX-ERROR;
     if NEW-DIL-C6-FLOW - DIL-C6-FLOW > DIL-C6-MAX-ERROR then begin
        DIL-C6-FLOW = DIL-C6-FLOW + DIL-C6-FLOW-CHANGE;
     end
     else if abs(NEW-DIL-C6-FLOW - DIL-C6-FLOW) > DIL-C6-MAX-ERROR then begin 
         DIL-C6-FLOW = DIL-C6-FLOW - DIL-C6-FLOW-CHANGE; 
         DIL-C6-FLOW-CHANGE = 0.3 * DIL-C6-FLOW-CHANGE;
         DIL-C6-FLOW = DIL-C6-FLOW + DIL-C6-FLOW-CHANGE;
     end;

      if the command of BLOCK = s88-abort-command then begin
         start _s88-abort (UNIT-PROCEDURE);
         conclude that the state of BLOCK = s88-aborted-state;
         return s88-aborted-state;
      end;
    end; {END FOR REPEAT}

    {CALCULATE ALT-C6}
    ALT-CEMENT-CONC = (POLY-RATE / 12.5)^0.5 * 4.65;
    ALT-C6-FLOW = (POLY-RATE / (ALT-CEMENT-CONC / 100.0)) - TOTAL-FD-FLOW - SDSTRM-COMP-FLOWS [5] - DIL-C6-FLOW - MIX-TEE-FLOW; 

    {CALCULATE TOTAL FLOWS AND CALC-HT-OF-RX-R1}
    TOTAL-FRNT-FLOW = call s88-sum-array (BLOCK, FRNT-COMP-FLOWS, 6);  
    CEMENT-CONC = POLY-RATE / (TOTAL-FRNT-FLOW + TOTAL-SS-COMP-FLOW + DIL-C6-FLOW + SWEEP-C6 + MIX-TEE-FLOW) * 100.0; 
     CALC-HT-RX-R1 = HT-OF-RX; 

    {SET RECIPE DATA}
    call s88-set-data(BLOCK, "calc-ht-rx-r1.val", CALC-HT-RX-R1, the symbol global);
    call s88-set-data(BLOCK, "cement-conc.val", CEMENT-CONC, the symbol global); 
    call s88-set-data(BLOCK, "alt-cement-conc.val", ALT-CEMENT-CONC, the symbol global); 
    call s88-set-data(BLOCK, "alt-c6-flow.val", ALT-C6-FLOW, the symbol global);
    call s88-set-data(BLOCK, "sdstrm-comp-flows.val", SDSTRM-COMP-FLOWS , the symbol global); 
    call s88-set-data(BLOCK, "frnt-comp-flows.val", FRNT-COMP-FLOWS , the symbol global);  
    call s88-set-data(BLOCK, "ss-flow.val", SS-FLOW , the symbol global); 

    { Added by pete so that I can display this in the model review screen }
    call s88-set-data(BLOCK, "dil-c6-flow.val", DIL-C6-FLOW, the symbol global);  
  
    if DEBUG-MODE then post "[the label of BLOCK] has completed!";

    delete SS-FLOW-ARRAY;
    delete FRNT-COMP-FLOWS;
    return s88-complete-state;
end 