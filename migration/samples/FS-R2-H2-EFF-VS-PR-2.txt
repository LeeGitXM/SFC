fs-r2-h2-eff-vs-pr-2 (BLOCK: class s88-recipe-entity)

slope: float;
grade: integer;
new-h2-grade, old-h2-grade: truth-value;
old-polyrate, new-polyrate, delta-polyrate : float; 
old-h2-to-va-ratio, new-h2-to-va-ratio: float;
 
ERROR: class s88-error;
ERROR-TXT: text;
P: class ph-procedure-or-method = this procedure;
DEBUG-MODE: truth-value = false; 
UNIT-PROCEDURE: class s88-unit-procedure;
 
begin
	if the debug-mode of P or the debug-mode of BLOCK then DEBUG-MODE = true;

	if DEBUG-MODE then post "In [the name of P]. . ."; 

	UNIT-PROCEDURE = call s88-get-unit-procedure (BLOCK); 

	begin
		new-polyrate = call s88-get (BLOCK, "new.poly-rate-from-user.val", s88-superior-operation);
		old-polyrate = call s88-get (BLOCK, "cur.poly-rate-from-user.val", s88-superior-operation); 

		old-h2-to-va-ratio = call s88-get(BLOCK, "cur.h2-to-v.val", s88-superior-operation); 

		slope = call s88-get (BLOCK, "r1-h2-to-v-slope.val", s88-superior-operation); 
		new-h2-grade = call s88-get (BLOCK, "new.h2-use-tag.val", s88-superior-operation); 
		old-h2-grade = call s88-get (BLOCK, "cur.h2-use-tag.val", s88-superior-operation);
		grade = call s88-get (BLOCK, "new.grade-number.val", s88-superior-operation);
	end
	on error (ERROR)
		delete ERROR;
		ERROR-TXT = "In [the name of P] - failed to collect base case RECIPE data for Hydrogen efficiency.";
		call s88-post-message-to-queue(BLOCK, ERROR-TXT, em-critical, BLOCK); 
		return; 
	end;
	if DEBUG-MODE then post "In [the name of P] New=poly=[new-polyrate], old-poly=[old-polyrate].";
	if DEBUG-MODE then post "In [the name of P] Old-h2-ratio=[old-h2-to-va-ratio].";
	if DEBUG-MODE then post "In [the name of P] Slope=[Slope].";
	if DEBUG-MODE then post "In [the name of P] Grade=[grade].";
{ Calculate the change in polymer rate desired [klb/day] }
	delta-polyrate = new-polyrate - old-polyrate; 
	if DEBUG-MODE then post "In [the name of P] delta-poly=[delta-polyrate].";
 
{ Calculate the new H2/Va molar ratio only if this is a hydrogen grade.  Note that the fetched slope for this calculation is the actual slope multiplied by 1000.  Thus, the fetched slope is divided by 1000 here.  [moles H2 / moles Va]  }
{ Manage the special cases for grades which do not use H2 at high rates but do use H2 at low rates.  Flying switches at rates which require H2 addition when the grade does not normally use H2 are not allowed.}

    case (grade) of

        2727, 2200, 2555: 
             if ( new-polyrate >= 450.0 ) then 
                 new-h2-to-va-ratio = 0.0  
             else begin
			new-h2-to-va-ratio = 0.0; 
			call s88-post-message-to-queue (BLOCK, "In [the name of P], A Flying Switch to Grade [grade] is not allowed at Polymer Rates less than 450.0 KLB/D.  Aborting.", em-error, BLOCK);
			start _s88-abort(UNIT-PROCEDURE); 
			wait for 2 seconds;
			return; 
		end ;
        Otherwise:  begin 
            if (new-h2-grade = true) then begin 

{  Calculate the new H2/Va molar ratio only if this is a hydrogen grade.  Note that the fetched slope for this calculation is the actual slope multiplied by 1000.  Thus, the fetched slope is divided by 1000 here.  [moles H2 / moles Va]  } 
		new-h2-to-va-ratio = 10.0 ^ (delta-polyrate * slope / 1000.0 + log(old-h2-to-va-ratio));
		if DEBUG-MODE then post "In [the name of P] new-h2-ratio=[new-h2-to-va-ratio].";
		call s88-set-data(BLOCK, "new.h2-to-v.val", new-h2-to-va-ratio, s88-superior-operation); 
		end 
            else begin
                new-h2-to-va-ratio = 0.0;
		call s88-set-data(BLOCK, "new.h2-to-v.val", 0.0, s88-superior-operation); 
            end
        end  { otherwise }                      
    end;   { Case } 

end